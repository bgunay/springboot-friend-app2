# Docker Compose file Reference (https://docs.docker.com/compose/compose-file/)

version: '3.7'

# Define services
services:
  # App backend service
  app-server:
    # Configuration for building the docker image for the backend service
    build:
      context: Server # Use an image built from the specified dockerfile in the `Server` directory.
      dockerfile: Dockerfile
    ports:
      - "8000:8000" # Forward the exposed port 8000 on the container to port 8000 on the host machine
    restart: always
    depends_on: 
      - db # This service depends on postgres. Start that first.
    environment: # Pass environment variables to the service
      # Datasource properties
      SPRING_DATASOURCE_URL: jdbc:postgresql://localhost:5432/mydb?useSSL=false&createDatabaseIfNotExist=true&serverTimezone=UTC
      SPRING_DATASOURCE_USERNAME: myuser
      SPRING_DATASOURCE_PASSWORD: a1s2d3
      # Cloudinary credentials

    networks: # Networks to join (Services on the same network can communicate with each other using their name)
      - backend

  # Database Service (postgres)
  db:
    image: postgres:14.5
    restart: always
    container_name: postgres
    environment:
      POSTGRES_DB: mydb
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: a1s2d3
    volumes:
      - postgres:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - backend

  pgadmin:
    container_name: pgadmin4_container
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: b.gunay1@gmail.com
      PGADMIN_DEFAULT_PASSWORD: a1s2d3
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - pgadmin:/var/lib/pgadmin

    ports:
      - "5050:80"
    networks:
      - backend
    restart: always
# Volumes
volumes:
  postgres:
  pgadmin:

# Networks to be created to facilitate communication between containers
networks:
  backend: